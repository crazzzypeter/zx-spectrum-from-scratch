; Процедура рисует точку за 83 такта, 
; перед вызовом надо инициализировать таблицу с помощью fast_point_table_init
; есть защита от y > 192
;
; Input:
; d - y
; e - x
; Used:
; h,l
fast_point:
    ld h,high fast_point_table;7
    ; y
    ld l,d;4
    ld d,(hl);7
    inc h;4
    ; x
    ld a,(hl);7 sss
    inc h;4
    ld l,e;4
    or (hl);7 смещение в байтах
    ld e,a;4
    ;
    inc h;4
    ld a,(de);7
    or (hl);7
    ld (de),a;7
 
    ret;10  
    
; инициализация таблицы,
; hl должен быть выровнен по 256(l = 0)
; размер таблицы - 1024 байта
;
; hl - fast_point_table
; de - screen addr (#4000,#c000)
fast_point_table_init:  
    ; генерация таблицы старшего байта адреса по Y
    ; заполняет 192(256) байтов 3 группами по 8*8
    ; %ddd00000,%ddd00001,%ddd00010,%ddd00011,%ddd00100,%ddd00101,%ddd00110,%ddd00111
    ; ...
    ; %ddd01000,%ddd01001,%ddd01010,%ddd01011,%ddd01100,%ddd01101,%ddd01110,%ddd01111
    ; ...
    ; %ddd10000,%ddd10001,%ddd10010,%ddd10011,%ddd10100,%ddd10101,%ddd10110,%ddd10111
    ld c,#00
.loop4:
    ld b,64
.loop44:
    ld a,l; смещение внутри знакоместа
    and #07
    or d; начало адреса
    or c; номер трети
    ld (hl),a
    inc hl
    djnz .loop44
    ld a,c
    add #08
    ld c,a
    cp #18
    jr nz,.loop4  
    ; пропускаем 64 байта
    ;ld l,0
    ;inc h
    ; ловушка, перенаправляющая вывод в пзу, при попытке нарисовать за экраном
    ld b,64
    ld a,0
.hook4:
    ld (hl),a
    inc hl
    djnz .hook4
    ; генерация таблицы смещения знакоместа в трети по Y
    ; заполняет 192(256) байтов 3 группами по 8*8
    ; #00,#00,#00,#00,#00,#00,#00,#00, 
    ; #20,#20,#20,#20,#20,#20,#20,#20,
    ; #40,#40,#40,#40,#40,#40,#40,#40,
    ; ...
    ; #E0,#E0,#E0,#E0,#E0,#E0,#E0,#E0,
    ; #00,#00,#00,#00,#00,#00,#00,#00, 
    ; ...
    ; логика повторений в том что по inc(младший байт) можно будет извлечь атриббутах в ряду по y
    ld a,0; текущее значение
    ex af,af
    ld a,8*3; сколько групп по 8 байтов
.loop3:
    ex af,af
    ld b,8
.loop33:
    ld (hl),a
    inc hl
    djnz .loop33
    add #20
    ex af,af
    dec a
    and a
    jr nz,.loop3
    ; пропускаем 64 байта
    ;ld l,0
    ;inc h
    ; ловушка, перенаправляющая вывод в пзу, при попытке нарисовать за экраном
    ld b,64
    ld a,0
.hook3:
    ld (hl),a
    inc hl
    djnz .hook3
    ; генерация таблицы смещения байта в строке
    ; заполняет 256 байтов 32 нарастающими группами по 8 байт 
    ; 0,0,0,0,0,0,0,0, 1,1,1,1,1,1,1,1, 2,2,2,2,2,2,2,2...
    ; логика повторений в том что по inc(младший байт) можно будет извлечь смещение
    ld a,0
.loop2:
    ld b,8
.loop22:
    ld (hl),a
    inc hl
    djnz .loop22
    inc a
    cp 32
    jr nz,.loop2    
    ; генерация таблицы смещения пиксела в байте
    ; заполняет 256 байтов повторяющимся паттерном 1,2,4,8,16,32,64,127,1,2..
.pixel_bit:
    ld a,128;208;128;128;136;208;192;128
    ld b,0
.loop1:
    ld (hl),a
    rrc a
    inc hl
    djnz .loop1
    ret